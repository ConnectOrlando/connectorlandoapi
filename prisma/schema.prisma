// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//define our data
model User {
  id                     String               @id @default(uuid()) @db.Uuid
  name                   String
  email                  String               @unique
  isEmailVerified        Boolean              @default(false)
  password               String
  profileImage           String?
  bio                    String?
  isInvestor             Boolean              @default(false)
  investorSpecialization String?
  companies              Business[]           @relation("owner")
  favorites              Business[]
  connections            InvestorConnection[]
  phone                  String?
  location               Json                 @default("{}")
  isPhoneVerified        Boolean              @default(false)
  linkedin               String?
  instagram              String?
  facebook               String?
  twitter                String?
  title                  String?
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @default(now()) @updatedAt
  isArchived             Boolean              @default(false)
  archivedAt             DateTime?
  RefreshTokens          RefreshTokens[]
}

//Business
model Business {
  id              String               @id @default(uuid()) @db.Uuid
  name            String
  type            BusinessType //TODO - pablo - think about this more
  mission         String
  gallery         String[]
  servicesOffered String?
  capital         Int?
  employees       Int?
  bio             String
  location        Json                 @default("{}")
  owner           User                 @relation(fields: [ownerId], references: [id], name: "owner")
  ownerId         String @db.Uuid
  favoritedBy     User[]
  connections     InvestorConnection[]
  isArchived             Boolean              @default(false)
  archivedAt             DateTime?
}

enum BusinessType {
  TECHNOLOGY
  FINANCE
}

model InvestorConnection {
  business    Business @relation(fields: [businessId], references: [id])
  businessId  String @db.Uuid
  user        User     @relation(fields: [userId], references: [id])
  userId      String @db.Uuid
  connectedOn DateTime @default(now())

  @@id([userId, businessId])
}

model RefreshTokens {
  id              String   @id @default(uuid()) @db.Uuid
  date            DateTime @default(now())
  ipAddress       String
  userAgent       String?
  userId          String?  @db.Uuid
  User           User?     @relation(fields: [userId], references: [id])
}